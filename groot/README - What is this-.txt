WordPress Pygame Tree Visualizer
Charbel Najm
December/January 2016/2017
PMSS Block C

This is my submission for Chapters 5 (draws an image), 7 (uses lists), 9 (uses functions) as I wanted to work on a more engaging project while still meeting the requirements.

It is a 2 script project with the goal of web-scrapping data from Mr. Chu's 4 class websites (in no specific order):
        https://pmssdm2016.wordpress.com
        https://pmsscoding2016.wordpress.com
        https://pmssanimation2016.wordpress.com
        https://pmssict2016.wordpress.com

And then visualizing that data creatively.

Currently, it will grab the number of articles/posts in each Wordpress site listed above, and draw a tree for each using the Article Count as the generation seed. A larger article count/seed will result in a taller tree with more branches.

The trees grow with each new post.

The two files in the folder are WordpressScraper.py and dataVirtualizer.py.
The WordpressScraper.py script does not need to be manually invoked.

—————————————————————
Running the project:
—————————————————————
1. Run the dataVirtualizer script:
    
    - If a data file does not exist, it will be generated by the WordpressScraper script and then fed into the data virtualizer.
    
    - If said data file exists, it will be read and loaded in. Modifying the data with a text editor and re-running the script can yield interesting results.
    
    - I have attached a data file (recent as of January 31, 2017) in case accessing the internet is not possible or blocked.
    
    - For the most recent & accurate data, delete the provided data.txt file and re-run the dataVirtualizer.py script
—————————————————————


Extra Info:
The data file is saved in json format.
———————————————————————————————————————————————————-
This project requires 3 non-default python modules,
Mentioned modules are found in a folder in the 
project dir, will run locally, and do not need to 
be installed on host system.
———————————————————————————————————————————————————-
dataVirtualizer.py: only requires Pygame and runs independently of the other script on condition that a data file is available in the same directory.
WordpressScraper.py: requires Requests (http://docs.python-requests.org/en/master/), which is an extension of the default python urllib libraries. It also requires BeautifulSoup (https://www.crummy.com/software/BeautifulSoup/) for its pythonic webpage parsing capabilities and ease of use.
———————————————————————————————————————————————————-

Thank you,
Charbel N.
